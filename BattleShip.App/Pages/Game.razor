@page "/Game"
@using BattleShip.App.Components
@using BattleShip.App.Services
@using BattleShip.Models
@inject LocalGameReplication LocalGameReplication
@inject NavigationManager Navigation

<div id="game-view">

    <div id="player1-view" class="player-view">
        <p class="player-name">Player 1</p>
        <div class="player-grid">
            <GameGrid Rows="@_gameData.Settings.GridHeight" Columns="@_gameData.Settings.GridWidth" CellClicked="OnCellClickSelf"/>
        </div>
    </div>

    <div id="vs-graphics">
        <p>VS</p>
    </div>

    <div id="player2-view" class="player-view">
        <p class="player-name">Player 2</p>
        <div class="player-grid">
            <GameGrid Rows="@_gameData.Settings.GridHeight" Columns="@_gameData.Settings.GridWidth" CellClicked="OnCellClickEnemy"/>
        </div>
    </div>

</div>

<GameHubConnectionHandler/>

@code {

    private GameData _gameData = null!;
    
    private GameState _gameState = GameState.WaitingForPlayers;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (LocalGameReplication.GameData == null)
        {
            Navigation.NavigateTo("/");
            return;
        }

        _gameData = LocalGameReplication.GameData;
        LocalGameReplication.OnStateChanged += OnStateChanged;
        Console.WriteLine($"Game started: {_gameData.Id} with grid size {_gameData.Settings.GridWidth}x{_gameData.Settings.GridHeight}");
        LocalGameReplication.SendReady();
    }

    private void OnCellClickSelf((int row, int col) parameters)
    {
        var (row, col) = parameters;
        Console.WriteLine($"Self clicked: {row}, {col}");
    }

    private void OnCellClickEnemy((int row, int col) parameters)
    {
        var (row, col) = parameters;
        Console.WriteLine($"Enemy clicked: {row}, {col}");
    }
    
    private void OnStateChanged(GameState state)
    {
        _gameState = state;
        Console.WriteLine($"Game state changed: {_gameState}");
        StateHasChanged();
    }

}